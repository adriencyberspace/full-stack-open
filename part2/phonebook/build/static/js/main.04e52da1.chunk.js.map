{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","search","onChange","handleSearchChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Notification","message","notificationStyle","color","notifColor","fontSize","borderStyle","borderRadius","padding","marginBottom","width","style","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","useState","persons","setPersons","setNewName","setNewNumber","showAll","setShowAll","setSearch","notification","setNotification","setNotifColor","useEffect","noteService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","map","indexOf","window","confirm","thisPerson","find","changedPerson","returnedPerson","personObject","concat","setTimeout","p","delete","catch","error","deleteThisPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04e52da1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <form>\n      <div>\n        Filter shown with: \n        <input \n          value={props.search}\n          onChange={props.handleSearchChange}\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>\n        Name: \n        <input \n          value={props.newName}\n          onChange={props.handleNameChange}\n        />\n        Phone Number: \n        <input \n          value={props.newNumber}\n          onChange={props.handleNumberChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({ person, deletePerson }) => {\n\n  return (\n    <li>\n      {person.name} {person.number}\n      <button onClick={deletePerson}>Delete</button>\n      </li>\n  )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({ message, notifColor }) => {\n  const notificationStyle = {\n    color: notifColor ,\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    width: 500\n  }\n  \n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\n\n// handles error when trying to just export the object without variable name\nconst exportedObject = { getAll, create, update }\nexport default exportedObject","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport noteService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ showAll, setShowAll ] = useState(false)\n  const [ search, setSearch ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ notifColor, setNotifColor ] = useState('black')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const names = persons.map(person => person.name)\n\n    if (names.indexOf(newName) > -1) {\n\n      if (window.confirm(`${newName} is already in phonebook. Would you like to update their phone number?`)) {\n        const thisPerson = persons.find(person => person.name === newName)\n        const changedPerson = {...thisPerson, number: newNumber}\n\n        noteService\n          .update(changedPerson.id, changedPerson).then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n          })\n      }\n    } else {\n      const personObject = {\n      name: newName,\n      number: newNumber\n      }\n\n      noteService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n        })\n\n      setNotifColor('green')\n      setNotification(\n        `${newName}' has been added to phonebook.`\n      )\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000)\n      \n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n    setShowAll(false)\n  }\n\n  const deleteThisPerson = id => {\n    const person = persons.find(p => p.id === id)\n\n    if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n      axios.delete(`http://localhost:3001/api/persons/${id}`).then(() => \n        setPersons(persons.filter(p => p.id !== id))\n      ).catch(error => {\n        setNotifColor('red')\n        setNotification(\n          `${person.name} already deleted from phonebook.`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 2000)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n      \n    }\n    \n  }\n\n  const personsToShow = showAll\n  ? persons\n  : persons.filter(person => person.name.toLowerCase().includes(`${search}`.toLowerCase()))\n\n  return (\n    <div>\n\n    <h2>Phonebook</h2>\n    <Notification message={notification} notifColor={notifColor} />\n\n    <Filter search={search} handleSearchChange={handleSearchChange}/>\n\n    <h2>Add New Entry</h2>\n    \n    <PersonForm \n      addPerson={addPerson} \n      newName={newName}\n      handleNameChange={handleNameChange}\n      newNumber={newNumber}\n      handleNumberChange={handleNumberChange}\n      />\n      \n      <h2>Numbers</h2>\n      \n      <ul>\n        {personsToShow.map(person => \n          <Person \n            key={person.name} \n            person={person}\n            deletePerson = {() => deleteThisPerson(person.id)}\n          />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}