{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","className","children","buttonClose","displayName","Blog","blog","handleLike","deleteBlog","color","fontSize","borderStyle","borderRadius","padding","marginBottom","width","title","author","id","url","likes","BlogForm","createBlog","newBlog","setNewBlog","handleBlogChange","event","target","name","value","onSubmit","preventDefault","onChange","type","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","username","password","Notification","message","notificationStyle","notifColor","baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","put","remove","delete","login","credentials","App","blogs","setBlogs","notification","setNotification","setNotifColor","setUsername","setPassword","user","setUser","blogFormRef","useRef","useEffect","blogService","initialBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","blogObject","current","returnedBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","likedBlog","find","b","updatedBlog","map","blogToDelete","confirm","filter","blogsByLikes","sort","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d3d964c.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible} className=\"togglableContent\">\n        {props.children}\n        <button onClick={toggleVisibility}>{props.buttonClose}</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  buttonClose: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React from 'react'\nimport Togglable from '../components/Togglable'\n\nconst Blog = ({ blog, handleLike, deleteBlog }) => {\n  const blogStyle = {\n    color: 'black' ,\n    fontSize: 16,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    width: 500\n  }\n\n  const blogView = () => (\n    <Togglable id=\"togglableBlogView\" buttonLabel='View' buttonClose='Hide'>\n      <div>{blog.url}</div>\n      <div>\n        {blog.likes}\n        <button className=\"like\" onClick={() => handleLike(blog.id)}>Like</button>\n      </div>\n      <button onClick={() => deleteBlog(blog.id)}>Remove</button>\n    </Togglable>\n  )\n\n  return (\n    <div style={blogStyle}>\n      <div className='blog'>\n        <div>{blog.title}</div>\n        <div>{blog.author}</div>\n        {blogView()}\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default Blog","import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ createBlog }) => {\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    author: '',\n    url: '',\n    likes: 0\n  })\n\n  const handleBlogChange = (event) => {\n    setNewBlog({ ...newBlog, [event.target.name]: event.target.value })\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newBlog.title,\n      author: newBlog.author,\n      url: newBlog.url\n    })\n\n    setNewBlog({ title: '', author: '', url:'' })\n\n  }\n\n  return (\n    <div>\n      <h2>Create New</h2>\n      <form onSubmit={addBlog}>\n        <label>Title:\n          <input\n            id=\"title\"\n            name=\"title\"\n            onChange={handleBlogChange}\n          /></label>\n        <br />\n        <label> Author:\n          <input\n            id=\"author\"\n            name=\"author\"\n            onChange={handleBlogChange}\n          /></label>\n        <br />\n        <label> URL:\n          <input\n            id=\"url\"\n            name=\"url\"\n            onChange={handleBlogChange}\n          /></label>\n        <br />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n\n  )\n}\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired\n}\n\nexport default BlogForm","import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            id=\"username\"\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type=\"submit\">login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Notification = ({ message, notifColor }) => {\n  const notificationStyle = {\n    color: notifColor ,\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    width: 500\n  }\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\" style={notificationStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'api/blogs' || 'http://localhost:3003/api/blogs'\n\n\n// Don't need token yet\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const url = `${ baseUrl }/${id}`\n  const request = axios.put(url, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create, update, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n// eslint-disable-next-line\nexport default { login }","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [notification, setNotification] = useState(null)\n  const [ notifColor, setNotifColor ] = useState('black')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = useRef()\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs =>\n        setBlogs( initialBlogs )\n      )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNotifColor('green')\n        setNotification(\n          `'${blogObject.title}' by '${blogObject.author}'  added.`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      blogService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setNotifColor('red')\n      setNotification('wrong credentials')\n      setTimeout(() => {\n        setNotification(null)\n      }, 2000)\n    }\n  }\n\n  // Logout handler - add to button\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"log in\">\n      <LoginForm\n        username={username}\n        password={password}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogForm = () => (\n    <Togglable buttonLabel='New Blog' buttonClose='Cancel' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const handleLike = async (id) => {\n    // await blogService.update(likedBlog.id, likedBlog)\n    const likedBlog = blogs.find(b => b.id === id)\n    const updatedBlog = {\n      ...likedBlog,\n      likes:likedBlog.likes + 1 }\n\n    await blogService\n      .update(id, updatedBlog)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(b =>\n          b.id !== id ?\n            b : returnedBlog))\n      })\n  }\n\n  const deleteBlog = id => {\n    const blogToDelete = blogs.find(b => b.id === id)\n\n    if (window.confirm(`Do you really want to delete ${blogToDelete.title} by ${blogToDelete.author}?`)) {\n\n      blogService\n        .remove(id)\n        .then(() =>\n          setBlogs(blogs.filter(b => b.id !== id))\n        )\n\n    }\n  }\n\n  const blogsByLikes = blogs.sort((a, b) => {\n    return b.likes - a.likes\n  })\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <Notification message={notification} notifColor={notifColor} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in</p>\n          <button onClick={handleLogout}>Logout</button>\n          <div>\n            {blogForm()}\n            {blogsByLikes.map(blog =>\n              <Blog\n                key={blog.id}\n                blog={blog}\n                handleLike={handleLike}\n                deleteBlog={deleteBlog} />\n            )}\n          </div>\n\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}